# test_improvements.py
import json
from pathlib import Path
from tender_analysis_system import TenderAnalysisSystem


def test_improved_system():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏"""
    
    # 1. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    system = TenderAnalysisSystem(
        categories_file="categories.jsonl"
    )
    
    system.initialize_system()
    
    # 2. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
    test_data = []
    with open("your_data.jsonl", 'r', encoding='utf-8') as f:
        for line in f:
            test_data.append(json.loads(line))
            if len(test_data) >= 1000:  # –û–±–º–µ–∂—É—î–º–æ –¥–ª—è —Ç–µ—Å—Ç—É
                break
    
    # 3. –û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö
    print("üìä –û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö...")
    results = system.load_and_process_data(test_data)
    print(f"‚úÖ –û–±—Ä–æ–±–ª–µ–Ω–æ: {results}")
    
    # 4. –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –º–æ–¥–µ–ª—ñ
    print("\nüéØ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –º–æ–¥–µ–ª—ñ...")
    training_results = system.train_prediction_model()
    print(f"‚úÖ AUC Score: {training_results['performance_metrics']['auc_score']:.4f}")
    
    # 5. –¢–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è
    print("\nüîÆ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–≥–Ω–æ–∑—É–≤–∞–Ω–Ω—è...")
    test_items = test_data[:10]  # –ë–µ—Ä–µ–º–æ 10 –∑–∞–ø–∏—Å—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É
    predictions = system.predict_tender_outcomes(test_items)
    
    for tender_id, pred in predictions['predictions'].items():
        print(f"–¢–µ–Ω–¥–µ—Ä {tender_id}: {pred['probability']:.3f} ({pred['confidence']})")
    
    # 6. –¢–µ—Å—Ç –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
    print("\nüìà –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–≤—ñ—Ç—É –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É...")
    monitor_report = system.predictor.monitor.generate_monitoring_report()
    print(f"–í—Å—å–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤: {monitor_report['total_predictions']}")
    
    # 7. –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏
    print("\nüíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏...")
    system.save_system("tender_system_improved.pkl")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–∞")


if __name__ == "__main__":
    test_improved_system()