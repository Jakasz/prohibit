"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–∏–Ω–∫–æ–≤–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
"""

import logging
from pathlib import Path
from tender_analysis_system import TenderAnalysisSystem

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def main():
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏
    logger.info("üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏...")
    
    system = TenderAnalysisSystem(
        categories_file="categories.jsonl",
        qdrant_host="localhost",
        qdrant_port=6333
    )
    
    if not system.initialize_system():
        logger.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏")
        return
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –¥–∞–Ω–∏—Ö
    db_size = system.vector_db.get_collection_size()
    logger.info(f"üìä –ó–∞–ø–∏—Å—ñ–≤ —É –≤–µ–∫—Ç–æ—Ä–Ω—ñ–π –±–∞–∑—ñ: {db_size:,}")
    
    if db_size < 1000:
        logger.warning("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
        return
    
    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    logger.info("üìà –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ä–∏–Ω–∫–æ–≤–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    results = system.update_market_statistics()
    
    logger.info(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞!")
    logger.info(f"   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ–π –æ–±—Ä–æ–±–ª–µ–Ω–æ: {results['categories_processed']}")
    
    # –ü—Ä–∏–∫–ª–∞–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∫—ñ–ª—å–∫–æ—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    if system.market_stats.category_stats:
        logger.info("\nüìä –ü—Ä–∏–∫–ª–∞–¥–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
        
        for i, (category, stats) in enumerate(list(system.market_stats.category_stats.items())[:5]):
            logger.info(f"\n{i+1}. {category}:")
            logger.info(f"   ‚Ä¢ –¢–µ–Ω–¥–µ—Ä—ñ–≤: {stats['total_tenders']}")
            logger.info(f"   ‚Ä¢ –ü–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤: {stats['total_suppliers']}")
            logger.info(f"   ‚Ä¢ –°–µ—Ä–µ–¥–Ω—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü—ñ—è: {stats['avg_suppliers_per_tender']:.1f} —É—á–∞—Å–Ω–∏–∫—ñ–≤/—Ç–µ–Ω–¥–µ—Ä")
            logger.info(f"   ‚Ä¢ Win rate –Ω–æ–≤–∞—á–∫—ñ–≤: {stats['new_supplier_win_rate']:.1%}")
            logger.info(f"   ‚Ä¢ –í—ñ–¥–∫—Ä–∏—Ç—ñ—Å—Ç—å —Ä–∏–Ω–∫—É: {stats['market_openness']:.1%}")


if __name__ == "__main__":
    main()